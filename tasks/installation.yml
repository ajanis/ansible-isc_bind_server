---

- name: Disable SELinux
  selinux:
    state: disabled
  when:
    - ansible_os_family == "RedHat"

- name: Get FirewallD public zone target
  command: firewall-cmd --zone public --get-target --permanent
  register: firewalld_public_target
  changed_when: False
  when:
    - ansible_os_family == "RedHat"

- name: Set FirewallD public zone to allow-all
  command: firewall-cmd --permanent --set-target=ACCEPT
  when:
    - firewalld_public_target.stdout != "ACCEPT"
    - ansible_os_family == "RedHat"

- name: "Import ISC Bind Server repository GPG signing key [Debian/Ubuntu]"
  apt_key:
    keyserver: "{{ isc_bind_server_repo_keyserver }}"
    id: "{{ isc_bind_server_repo_key_id }}"
    state: present
  when: ansible_os_family == "Debian"

- name: "Add ISC Bind Server repository [Debian/Ubuntu]"
  apt_repository:
    repo: "{{ isc_bind_server_repo_ppa }}"
    state: present
  when: ansible_os_family == "Debian"

- name: "Add ISC Bind Server repository [RHEL/CentOS]"
  yum_repository:
    name: isc_bind
    description: "ISC Bind Repo"
    baseurl: "{{ isc_bind_server_repo_url }}"
    gpgkey: "{{ isc_bind_server_repo_key_url }}"
    state: present
  when: ansible_os_family == "RedHat"

- name: Install bind9
  package:
    pkg: "{{ isc_bind_server_pkgs }}"
    state: present

- name: "Create daemon options file for Bind9 service"
  template:
    src: etc/default/named.j2
    dest: "{{ isc_bind_server_daemonopts_path }}/named"
    owner: "{{ isc_bind_server_user }}"
    group: "{{ isc_bind_server_group }}"
    mode: 0755
  notify: restart named

- name: Enable Bind9 Service
  systemd:
    name: "{{ isc_bind_server_service }}"
    state: started
    enabled: yes
    daemon_reload: yes

- name: Create symlink to isc-bind-named binaries (RHEL/CentOS)
  block:
    - name: Find all isc-bind-named binaries
      find:
        paths: /opt/isc/isc-bind/root/bin/
      register: isc_binaries
      #changed_when: False

    - name: Create symlinks to isc-bind-named binaries in /usr/local/bin/
      file:
        src: "{{ item.path }}"
        dest: "/usr/local/bin/{{ item.path | basename }}"
        state: link
      loop: "{{ isc_binaries.files }}"
  when:
    - ansible_os_family == "RedHat"
